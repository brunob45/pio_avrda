; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html


[env]
; platform = atmelmegaavr
platform = https://github.com/brunob45/platform-atmelavrdx#dev/dxcore-btld
framework = arduino
; platform_packages =
;   framework-arduino-megaavr-dxcore @ https://github.com/brunob45/framework-arduino-megaavr-dxcore#platformio

board_bootloader.port = ser0
board_bootloader.entrycond = 8sec


; [env:AVR16DD14]
; board = AVR16DD14

; [env:AVR16DD20]
; board = AVR16DD20

; [env:AVR16DD28]
; board = AVR16DD28

; [env:AVR16DD32]
; board = AVR16DD32

[env:AVR32DA28]
board = AVR32DA28

[env:AVR32DA32]
board = AVR32DA32

[env:AVR32DA48]
board = AVR32DA48

[env:AVR32DB28]
board = AVR32DB28

[env:AVR32DB32]
board = AVR32DB32

[env:AVR32DB48]
board = AVR32DB48

; [env:AVR32DD14]
; board = AVR32DD14

; [env:AVR32DD20]
; board = AVR32DD20

; [env:AVR32DD28]
; board = AVR32DD28

; [env:AVR32DD32]
; board = AVR32DD32

[env:AVR64DA28]
board = AVR64DA28

[env:AVR64DA32]
board = AVR64DA32

[env:AVR64DA48]
board = AVR64DA48

[env:AVR64DA64]
board = AVR64DA64

[env:AVR64DB28]
board = AVR64DB28

[env:AVR64DB32]
board = AVR64DB32

[env:AVR64DB48]
board = AVR64DB48

[env:AVR64DB64]
board = AVR64DB64

[env:AVR64DD14]
board = AVR64DD14

[env:AVR64DD20]
board = AVR64DD20

[env:AVR64DD28]
board = AVR64DD28

[env:AVR64DD32]
board = AVR64DD32

[env:AVR128DA28]
board = AVR128DA28

[env:AVR128DA32]
board = AVR128DA32

[env:AVR128DA48]
board = AVR128DA48

[env:AVR128DA64]
board = AVR128DA64

[env:AVR128DB28]
board = AVR128DB28

[env:AVR128DB32]
board = AVR128DB32

[env:AVR128DB48]
board = AVR128DB48

[env:AVR128DB64]
board = AVR128DB64

; [env:AVR64EA28]
; board = AVR64EA28

; [env:AVR64EA32]
; board = AVR64EA32

; [env:AVR64EA48]
; board = AVR64EA48

